name: Create GitHub Release after GitLab tag mirror

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  preparations:
    runs-on: ubuntu-latest
    # OUTPUTS
    outputs:
      version: ${{ steps.tag.outputs.tag }}

    steps:
      # GET THE LATEST CODE
      - name: Checkout latest code
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0

      # EXTRACT TAG FROM PUSH
      - name: Get tag
        id: tag
        uses: tj-actions/branch-names@v6.5
      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}

  release:
    needs: preparations
    runs-on: ubuntu-latest

    steps:
      # GET THE LATEST CODE
      - name: Checkout latest code
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0

      # BUILD PROJECT AND PUBLISH
      - name: Set up JDK 17
        uses: actions/setup-java@v3.11.0
        with:
          distribution: 'zulu'
          java-version: '17'
          check-latest: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - uses: gradle/gradle-build-action@v2.4.2
        with:
          gradle-version: wrapper

      - name: Build release
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew -Pversion="${{ needs.preparations.outputs.version }}" build --info --full-stacktrace

      # UPLOAD ARTIFACTS
      - uses: actions/upload-artifact@v3.1.2
        if: ${{ always() }}
        with:
          name: release-artifacts
          path: |
            build/libs/spc-jneedle-plugin-${{ needs.preparations.outputs.version }}.jar
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

      # GET RELEASE INFO
      - name: Get Release Info
        run: |
          curl --header \
          'PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}' \
          'https://git.griefed.de/api/v4/projects/118/releases/${{ needs.preparations.outputs.version }}' >> version.json

      # GET DESCRIPTION
      - name: Extract version changelog
        uses: sergeysova/jq-action@v2.3.0
        id: description
        with:
          cmd: "jq .description version.json -r | sed -e 's/\\n/\\n/g' > description.txt"
          multiline: true

      - name: Dafuq # Otherwise we wouldn't be able to work with the file. Because reasons...
        run: sudo chown $USER description.txt

      - name: Check length and truncate if needed
        run: |
          if [[ $(wc -c description.txt | awk '{print $1}') -ge 10000 ]]; then
            truncate -s 10000 description.txt
            printf "\n\n............\n\nRelease notes truncated. For more details, see the [CHANGELOG](https://github.com/Griefed/spc-jneedle-plugin/blob/master/CHANGELOG.md).\n\n" >> description.txt
          fi

      # GENERATE RELEASE
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v0.1.15
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ needs.preparations.outputs.version }}
          name: Release ${{ needs.preparations.outputs.version }}
          body_path: description.txt
          draft: false
          prerelease: false
          fail_on_unmatched_files: false
          files: |
            build/libs/spc-jneedle-plugin-${{ needs.preparations.outputs.version }}.jar
